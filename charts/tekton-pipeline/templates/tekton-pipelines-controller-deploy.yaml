apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
      {{- with .Values.controller.deployment.labels }}
        {{- toYaml . | nindent 4 }}
      {{- end}}
    pipeline.tekton.dev/release: {{ .Chart.AppVersion }}
    version: {{ .Chart.AppVersion }}
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: controller
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        fake: value
          {{- with .Values.controller.pod.annotations }}
            {{- toYaml . | nindent 8 }}
          {{- end}}
      labels:
        app: tekton-pipelines-controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: controller
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
          {{- with .Values.controller.pod.labels }}
            {{- toYaml . | nindent 8 }}
          {{- end}}
        pipeline.tekton.dev/release: {{ .Chart.AppVersion }}
        version: {{ .Chart.AppVersion }}
    spec:
      containers:
      - args:
        - -version
        - {{ .Chart.AppVersion }}
        - -kubeconfig-writer-image
        - {{ include "common.images.image" (dict "context" $ "imageRoot" .Values.images.kubeconfigwriter) | quote }}
        - -git-image
        - {{ include "common.images.image" (dict "context" $ "imageRoot" .Values.images.git) | quote }}
        - -entrypoint-image
        - {{ include "common.images.image" (dict "context" $ "imageRoot" .Values.images.entrypoint) | quote }}
        - -nop-image
        - {{ include "common.images.image" (dict "context" $ "imageRoot" .Values.images.nop) | quote }}
        - -imagedigest-exporter-image
        - {{ include "common.images.image" (dict "context" $ "imageRoot" .Values.images.digest) | quote }}
        - -pr-image
        - {{ include "common.images.image" (dict "context" $ "imageRoot" .Values.images.pullrequest) | quote }}
        - -gsutil-image
        - {{ include "common.images.notagimage" (dict "context" $ "imageRoot" .Values.images.cloud) | quote }}
        - -shell-image
        - {{ include "common.images.notagimage" (dict "context" $ "imageRoot" .Values.images.shell) | quote }}
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_DEFAULTS_NAME
          value: config-defaults
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_ARTIFACT_BUCKET_NAME
          value: config-artifact-bucket
        - name: CONFIG_ARTIFACT_PVC_NAME
          value: config-artifact-pvc
        - name: CONFIG_FEATURE_FLAGS_NAME
          value: feature-flags
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election
        - name: SSL_CERT_FILE
          value: /etc/config-registry-cert/cert
        - name: SSL_CERT_DIR
          value: /etc/ssl/certs
        - name: METRICS_DOMAIN
          value: tekton.dev/pipeline
        image: {{ include "common.images.image" (dict "context" $ "imageRoot" .Values.images.controller) | quote }}
        livenessProbe:
          httpGet:
            path: /health
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: tekton-pipelines-controller
        ports:
        - containerPort: 8080
          name: probes
        readinessProbe:
          httpGet:
            path: /readiness
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          runAsGroup: 65532
          runAsUser: 65532
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
        - mountPath: /etc/config-registry-cert
          name: config-registry-cert
      serviceAccountName: tekton-pipelines-controller
      volumes:
      - configMap:
          name: config-logging
        name: config-logging
      - configMap:
          name: config-registry-cert
        name: config-registry-cert